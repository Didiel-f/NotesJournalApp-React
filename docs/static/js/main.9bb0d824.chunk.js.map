{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","actions/ui.js","actions/auth.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","loadNotes","uid","a","collection","orderBy","get","notesSnap","notes","forEach","snapHijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","JournalEntry","date","useDispatch","noteDate","moment","className","onClick","style","backgroundSize","backgroundImage","startOf","fromNow","format","JournalEntries","useSelector","state","map","key","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","Sidebar","name","signOut","newNote","Date","getTime","add","docRef","NotesAppBar","active","display","value","onChange","preventDefault","target","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","useForm","initialState","useState","values","setValues","reset","handleInputChange","handleImageChange","src","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","onLoad","alt","delete","NothingSelected","JournalScreen","LoginScreen","loading","ui","onSubmit","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","registerValues","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPassName","AuthRouter","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setisLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9bb0d824.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyDkli4B9mqd0MD1gKBR_ObTpQptmQ6-lZc\",\r\n    authDomain: \"react-app-journal-8db1f.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-journal-8db1f.firebaseio.com\",\r\n    projectId: \"react-app-journal-8db1f\",\r\n    storageBucket: \"react-app-journal-8db1f.appspot.com\",\r\n    messagingSenderId: \"225053068686\",\r\n    appId: \"1:225053068686:web:e4d872aede4041ede228df\",\r\n    measurementId: \"G-P9CYEL3C37\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  };","\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout note',\r\n    \r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).orderBy('date', 'desc').get()\r\n    const notes = []\r\n    // const ord = notesSnap.orderBy('date');\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    })\r\n\r\n    return notes;\r\n};","\r\n\r\n\r\nexport const fileUpload = async ( file ) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dkpbs7ll6/upload?';\r\n\r\n    const formData = new FormData();\r\n    formData.append( 'upload_preset', 'react-journal' );\r\n    formData.append( 'file', file );\r\n\r\n    try {\r\n\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error){\r\n        throw error;\r\n    }\r\n\r\n\r\n\r\n};","import { db } from \"../firebase/firebase-config\";\r\nimport Swal from 'sweetalert2';\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n\r\n        const docRef = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n        console.log(docRef.id)\r\n\r\n        dispatch( activeNote( docRef.id, newNote ) );\r\n        dispatch( addNewNote( docRef.id, newNote ) );\r\n    }\r\n};\r\n\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n};\r\n\r\nexport const setNotes = ( notes ) => ({ \r\n\r\n    type: types.notesLoad,\r\n    payload: notes\r\n    \r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, note ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }    \r\n};\r\n\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note\r\n    }\r\n});\r\n\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url = fileUrl;\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n\r\n\r\n        \r\n        Swal.close();\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        \r\n        dispatch( deleteNote( id ) );\r\n    }\r\n};\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning \r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url, note } ) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, note ) )\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }    \r\n        >\r\n\r\n            {\r\n                (url) &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url( ${url} )`\r\n                    }}\r\n                ></div>\r\n\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { moment(noteDate).startOf('hour').fromNow()  } </span>\r\n                <h4> { noteDate.format('dddd') } </h4>\r\n                <h4> { noteDate.format('do') } </h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        note={note}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport { noteLogout } from \"./notes\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({user}) => {\r\n                dispatch( \r\n                    login( user.uid, user.displayName) \r\n                );\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch( (e) => {\r\n                console.log(e)\r\n                dispatch(finishLoading());\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            });\r\n            \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPassName = ( email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async ({user}) => {           \r\n                \r\n                await user.updateProfile( {displayName: name} );\r\n                dispatch(login( user.uid, user.displayName)); \r\n            })\r\n            .catch( (e) => {\r\n                console.log(e)\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            });\r\n    }\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) => {\r\n                console.log(user)\r\n                dispatch(login( user.uid, user.displayName)); \r\n            });\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    \r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }  \r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n        \r\n    }\r\n    \r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n});","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { JournalEntries } from './JournalEntries';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const name = useSelector( ({auth}) => auth.name);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout() );\r\n    };\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    };\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar animate__animated animate__bounceInLeft nothing__scroll\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    };\r\n    \r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        e.preventDefault();\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    };\r\n    const noteDate = moment( active.date );\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> { noteDate.format('dddd do') } </span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                value=\"\"\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {} ) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n            \r\n        });\r\n    }\r\n\r\n    const handleImageChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            url: target.src\r\n            \r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset, handleImageChange ];\r\n\r\n}\r\n\r\n\r\n","import React, { useRef } from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const note = useSelector( ({notes}) => notes.active );\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [ formValues, handleInputChange, reset, handleImageChange ] = useForm( note );\r\n    \r\n    const { title, body } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ){\r\n            reset();\r\n            activeId.current = note.id;\r\n        }\r\n        \r\n    }, [ note, reset ]);\r\n   \r\n    \r\n    useEffect(() => {\r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );    \r\n    }, [ formValues, dispatch ])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( note.id ) );\r\n    };\r\n    \r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <NotesAppBar  />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    onChange={handleInputChange}\r\n                    value={title}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    onChange={handleInputChange}\r\n                    value={body}\r\n                ></textarea>\r\n\r\n                {\r\n                    ( note.url )\r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                onLoad={handleImageChange}\r\n                                src= { note.url }\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div \r\n            className=\"nothing__main-content animate__animated animate__bounceInRight nothing__scroll\"      \r\n        >\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const loading = useSelector( ({ui}) => ui.loading)\r\n\r\n    console.log(loading);\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'didiel.fi@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin} \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPassName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const msgError = useSelector(({ui}) => ui.msgError) \r\n    console.log(msgError)\r\n    \r\n    const initialState = {\r\n        name: 'Didiel',\r\n        email: 'didiel.f@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n\r\n    }\r\n    const [ registerValues, handleInputChange ] = useForm(initialState);\r\n\r\n    const { name, email, password, password2 } = registerValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log( name, email, password, password2 );\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPassName( email, password, name ) );\r\n        }\r\n\r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n            dispatch( removeError() );\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleSubmit}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                { ( msgError ) && \r\n                    (<div className=\"auth__alert-error fade-in transparency\">\r\n                        <span>{msgError}</span>\r\n                    </div>)\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    value={name}\r\n                />\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                />\r\n                \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                />\r\n                \r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password2}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                    <Route path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                    \r\n                </Switch>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n\r\n                ( !isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to=\"/\" /> )\r\n            )}\r\n\r\n        />\r\n            \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // localStorage.setItem('lastPath', rest.location.pathname + rest.location.search );\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? ( <Component {...props} /> )\r\n                : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { login } from \"../actions/auth\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setisLoggedIn] = useState(false);\r\n  \r\n/////////// Para mantener el estado de la autenticación al recargar el navegador//////////\r\n  useEffect(() => {\r\n    \r\n    firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n      if ( user?.uid ){\r\n        dispatch( login( user.uid, user.displayName ) );\r\n        setisLoggedIn(true);\r\n        \r\n        dispatch( startLoadingNotes( user.uid ) );\r\n\r\n      } else {\r\n        setisLoggedIn(false);\r\n      }\r\n      setChecking(false);\r\n    });\r\n\r\n  }, [ dispatch ]);\r\n////////////////////////////////////////////////////////////////////////////////////////////////7\r\n\r\n  if(checking){\r\n    return (\r\n      // Aquí se pude retornar un  componente para motrar una pantalla de carga más elaborada\r\n      <h1>Cargando autenticación, por favor espere.</h1>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n            path=\"/auth\" \r\n            component={AuthRouter}\r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n\r\n          <PrivateRoute \r\n            exact \r\n            path=\"/\" \r\n            component={JournalScreen} \r\n            isAuthenticated={isLoggedIn}\r\n          />\r\n\r\n          <Redirect to=\"/auth/login\" />\r\n\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n            \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n};\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive: \r\n            return {\r\n                ...state,\r\n                active: {\r\n                ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return { \r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                     \r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return { \r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n            default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = (state = {}, action ) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}